swagger.enable=true

## 数据库配置
spring.datasource.type=com.zaxxer.hikari.HikariDataSource
spring.datasource.driverClassName = com.mysql.cj.jdbc.Driver
spring.datasource.url = jdbc:mysql://106.53.244.106:3306/heroland_competition?useUnicode=true&characterEncoding=utf-8&useSSL=false
spring.datasource.username = hero
spring.datasource.password = hero@123
## 最小空闲连接数量
spring.datasource.hikari.minimum-idle=5
## 空闲连接存活最大时间，默认600000（10分钟）
spring.datasource.hikari.idle-timeout=180000
## 连接池最大连接数，默认是10
spring.datasource.hikari.maximum-pool-size=10
## 此属性控制从池返回的连接的默认自动提交行为,默认值：true
spring.datasource.hikari.auto-commit=true
## 连接池母子
spring.datasource.hikari.pool-name=MyHikariCP
## 此属性控制池中连接的最长生命周期，值0表示无限生命周期，默认1800000即30分钟
spring.datasource.hikari.max-lifetime=1800000
## 数据库连接超时时间,默认30秒，即30000
spring.datasource.hikari.connection-timeout=30000
spring.datasource.hikari.connection-test-query=SELECT 1


# 日志级别
logging.level.com.heroland.competition.dal.mapper=debug

#dubbo.registry.protocol= zookeeper

# Dubbo provider
# \u6307\u5B9A nacos namespace
# TODO dubbo.application.parameters.namespace=0f434e39-23a7-456e-a835-3e5cfdc51fd1

#dubbo.provider.registries[0].protocol=zookeeper
#dubbo.provider.registries[0].address=zookeeper://106.53.244.106:2181
#dubbo.provider.registries[0].port=2181

#dubbo.provider.registries[1].protocol=nacos
#dubbo.provider.registries[1].port=8848
#dubbo.provider.registries[1].address=nacos://192.168.1.123:8847?backup=192.168.1.123:8848,192.168.1.123:8849
#dubbo.provider.version=1.0.0.dev

### dubbo consumer
#dubbo.consumer.registries[0].protocol=zookeeper
#dubbo.consumer.registries[0].port=2181
#dubbo.consumer.registries[0].address=zookeeper://106.53.244.106:2181
#
#dubbo.consumer.registries[1].protocol=nacos
#dubbo.consumer.registries[1].port=8848
#dubbo.consumer.registries[1].address=nacos://192.168.1.123:8847?backup=192.168.1.123:8848,192.168.1.123:8849

dubbo.registry.protocol=zookeeper
dubbo.registry.port=2181
dubbo.registry.address=zookeeper://106.53.244.106:2181


nacos.config.namespace=f9d3cc0a-32aa-4684-a61c-97a7d8bff0b6
nacos.config.data-id=bqhealth_cloud_data
nacos.config.group=bqhealth_cloud_group
nacos.config.auto-refresh=true
nacos.config.server-addr=192.168.1.123:8849,192.168.1.123:8848

#redis
################ Redis 基础配置 ##############
# Redis数据库索引（默认为0）
spring.redis.database=0

#spring.redis.cluster.nodes=106.53.244.106:6379
#spring.redis.cluster.max-redirects=12
# Redis服务器地址
spring.redis.host=106.53.244.106
hero.redis.type=standalone
# Redis服务器连接端口
# Redis服务器连接密码（默认为空）
spring.redis.password=jnet.com
# 链接超时时间 单位 ms（毫秒）
spring.redis.timeout=30000ms
################ Redis 线程池设置 ##############
# 连接池最大连接数（使用负值表示没有限制） 默认 8
spring.redis.lettuce.pool.max-active=8
# 连接池最大阻塞等待时间（使用负值表示没有限制） 默认 -1
spring.redis.lettuce.pool.max-wait=3000ms
# 连接池中的最大空闲连接 默认 8
spring.redis.lettuce.pool.max-idle=8
# 连接池中的最小空闲连接 默认 0
spring.redis.lettuce.pool.min-idle=0


# cim

# 关闭健康检查权限
#management.security.enabled=false
# SpringAdmin 地址
spring.boot.admin.url=http://127.0.0.1:8888

#自定义监控端点 key
monitor.channel.map.key=channelMap


# 是否注册 zk
app.zk.switch=true

# zk 地址
app.zk.addr=ip:port

# zk 连接超时时限
app.zk.connect.timeout=15000

# zk 注册根节点
app.zk.root=/route

# route url suggested that this is Nginx address
cim.route.url=http://localhost:8083/

# 检测多少秒没有收到客户端心跳后服务端关闭连接 单位秒
cim.heartbeat.time = 30

# sso
platform.sso.enable=true

platform.sso.serverUrl=http://hero.yaonie1995.xyz/
platform.sso.server.dubbo.registry.address=zookeeper://106.53.244.106:2181

platform.sso.client.appId=sso-server
platform.sso.client.appSecret=test
platform.sso.client.orgCode=1
platform.sso.client.excludedPaths=/acs/user/login,/acs/user/register,/acs/user/check-permissions,/acs/app/*
#platform.sso.client.includedPaths=/acs/user/myself
platform.sso.client.permissionEnable=false
platform.sso.client.checkAppEnable=false
platform.sso.client.requestType=HTTP